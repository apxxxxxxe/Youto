//------------------------------------------------------------------------------
//OnTranslateイベント（ゴースト「はろーYAYAわーるど」より転載）（省略可）
//------------------------------------------------------------------------------

OnTranslate
{
	_text = reference[0]

  _text = REPLACE(_text, "…","…\_w[500]")
  _text = REPLACE(_text, "、","、\_w[900]")
  _text = REPLACE(_text, "。","。\_w[1250]")
  _text = REPLACE(_text, "！","！\_w[1250]")
  _text = REPLACE(_text, "？","？\_w[1250]")

  _text
}

//------------------------------------------------------------------------------
//OnTranslateInternalイベント（ゴースト「はろーYAYAわーるど」より転載）（省略可）
//------------------------------------------------------------------------------
//OnTranslateがYAYA→本体→YAYAと、一度本体を経由するのに対して、
//OnTranslateInternalはYAYA内部でのトランスレートです。
//そのため、reference変数などが変更されない状態でこの関数に渡されます。
//引数は、_argv[0]が、本体に渡す寸前のトークの内容です。
//（コメントアウト中）
/*
OnTranslateInternal
{
	_text = _argv[0]

	_text
}
*/

//---------------------------------------------------------
//選択肢
//---------------------------------------------------------

//選択肢ジャンプ
OnChoiceSelect
{
	_id = reference[0]
	if ISFUNC(_id) {
		EVAL(_id)
	}
}
OnChoiceSelectEx
{
	_id = reference[1]
	if ISFUNC(_id) {
		EVAL(_id)
	}
}
//アンカージャンプ
OnAnchorSelect
{
	_id = reference[0]
	//アンカーのIDの冒頭に「http://〜」があればWebサイトを開く。
	//これを入れておくとRSS表示時に記事タイトルクリックでURLジャンプできます。
	if RE_MATCH(_id, 'http://.+') {
		_url = AYATEMPLATE.EscapeText(_id)
		"\C\j[%(_url)] \e"
	//それ以外はIDと同じ名前のイベントへジャンプ
	} elseif ISFUNC(_id) {
		EVAL(_id)
	}
}
OnAnchorSelectEx
{
	_id = reference[1]
	//アンカーのIDの冒頭に「http://〜」があればWebサイトを開く。
	//これを入れておくとRSS表示時に記事タイトルクリックでURLジャンプできます。
	if RE_MATCH(_id, 'http://.+') {
		_url = AYATEMPLATE.EscapeText(_id)
		"\C\j[%(_url)] \e"
	//それ以外はIDと同じ名前のイベントへジャンプ
	} elseif ISFUNC(_id) {
		EVAL(_id)
	}
}

//------------------------------------------------------------------------------

//選択肢タイムアウト（省略可）（コメントアウト中）
//選択肢放置で発生。使い方によってはうざったくなるので注意。
/*
OnChoiceTimeout
{
	"\1\s[10]\0\s[0]選択肢がタイムアウトしました。\e"
}
*/

//---------------------------------------------------------
//入力ボックス
//---------------------------------------------------------

//InputBoxに入力した
//IDと同じ名前のイベントにジャンプ
OnUserInput
{
	EVAL(reference[0])
}

//---------------------------------------------------------
//ロード/アンロードイベント（必要なければ削除可）
//---------------------------------------------------------
//ゴーストの起動終了、SHIORIリロード等で発生

//ゴーストのロード
//起動毎の変数の初期化などはここで
OnGhostLoad
{
}

//ゴーストのアンロード
//終了毎変数の削除などはここで
OnGhostUnload
{
	//なで反応で使用する変数の削除
	ERASEVAR('stroke')
	ERASEVAR('prev_reference4')
	ERASEVAR('nade_prev')
	
	//最終終了時刻。後で使うかもしれないので記録（省略可）
	//（長期間起動しなかった時の反応等に）
	LastCloseTime	= GETTIME
}

//---------------------------------------------------------
//消滅イベント（省略可）
//---------------------------------------------------------
//ただしOnVanishSelectedは省略すると他のイベントで代用されない

//消滅指示
OnVanishSelecting
{
	"\1\s[10]\0\s[0]ゴーストアンインストール指示。\e"
}

//消滅中止（確認ダイアログでNOを選んだ）
OnVanishCancel
{
	"\1\s[10]\0\s[0]ゴーストアンインストール中止。\e"
}

//ダブルクリックで消滅中止
OnVanishButtonHold
{
	"\1\s[10]\0\s[0]ダブルクリックでゴーストアンインストール中止。\e"
}

//消滅実行（確認ダイアログでYESを選んだ）
//消滅後は他のゴーストにランダム交代
OnVanishSelected
{
	"\1\s[10]\0\s[0]ゴーストアンインストール実行。\w9\w9\w9\e"
}

//他のゴーストが消滅し自分に交代（省略するとOnGhostChanged）（自ゴースト起動）
OnVanished
{
	//ベースウェアによってはreference[0]の中身が空の事もあるようなので
	if reference[0] == "" {
		"\1\s[10]\0\s[0]ゴースト消滅より交代。\e"
	}

	else {
		//reference[0]はsakura.name
		"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))の消滅より交代。\e"
	}
}

//---------------------------------------------------------
//最小化（省略可）
//---------------------------------------------------------

//最小化指示（SSP用）（コメントアウト中）
//※注：ユーザーの邪魔になる可能性有り
/*
OnWindowStateMinimize {
	"\1\s[10]\0\s[0]最小化します。\e"
}
*/

//最小化解除
OnWindowStateRestore {
	"\1\s[10]\0\s[0]最小化が解除されました。\e"
}

//---------------------------------------------------------
//時間経過イベント
//---------------------------------------------------------

//1秒に一度呼ばれる。削除するとAIトークイベントが発生しなくなるため、
//使用しない場合でも中身が空のものを置くこと。
OnSecondChange
{
MikireKasanari
}

//多少の間を空けてから発生する見切れ・重なりイベント（省略可）
//（文Wiki記載「見切れ・重なり反応を里々風に」を改変）
MikireKasanari
{
	//見切れ反応（メインキャラ見切れ5秒後）
	if reference[1] && !mikireflag {
		mikiretimer--
		if mikiretimer < 1 {
			mikireflag = 1
			"\1\s[10]\0\s[0]見切れ反応。\e"
		}
	}
	else {
		mikiretimer = 5
	}

	//見切れ終了反応（見切れ終了直後）
	if mikireflag && !reference[1] {
		mikireflag = 0
		"\1\s[10]\0\s[0]見切れ終了。\e"
	}

	//重なり反応（メインとサブキャラの重なり5秒後）
	elseif !kasanariflag && reference[2] {

		if ISVAR('kasanaritimer') == 0 {
			kasanaritimer = 5
		}

		kasanaritimer--
		if kasanaritimer < 1 {
			kasanariflag = 1
			"\1\s[10]\0\s[0]重なり反応。\e"
		}
	}
	//重なり終了反応（重なり終了直後）
	elseif kasanariflag && !reference[2] {
		kasanariflag = 0
		kasanaritimer = 5
		"\1\s[10]\0\s[0]重なり終了。\e"
	}
	else {
		kasanaritimer = 5
	}
}

//1分に一度呼ばれる（省略可）
OnMinuteChange
{
}

//---------------------------------------------------------
//シェル変更（省略可）
//---------------------------------------------------------

//シェル変更開始
OnShellChanging {
	"\1\s[10]\0\s[0]シェルを『%(EscapeAllTags(reference[0]))』に変更します。\e"
}

//シェル変更完了
OnShellChanged {
	"\1\s[10]\0\s[0]シェルを『%(EscapeAllTags(reference[0]))』に変更しました。\e"
}

//---------------------------------------------------------
//ネットワーク状況（省略可）
//---------------------------------------------------------

//相手サーバが時間内に応答しなかった（コメントアウト中）
/*
OnNetworkHeavy
{
	"\1\s[10]\0\s[0]ネットワーク混雑中。\e"
}
*/
//---------------------------------------------------------
//オーナードローメニューリソース（省略可/コメントアウト中）
//---------------------------------------------------------

/*
//おすすめサイトボタンキャプション（本体側）
On_sakura.recommendbuttoncaption { "おすすめサイト" }

//おすすめサイトリンク
//1行目 サイトタイトル
//2行目 サイトURL
//3行目 バナーURL（省略可）
//又は\ghost\master\bannerディレクトリ内のバナーファイル名（拡張子はつけない）
//4行目 ジャンプ時のトーク（省略可）
//行の区切りは最後に%(CHR(1))、リンク項目ごとの区切りは%(CHR(2))

On_sakura.recommendsites
{"/
	サイトタイトル1%(CHR(1))/
	http://......./%(CHR(2))/

	サイトタイトル2%(CHR(1))/
	http://......./%(CHR(2))/
"}

//ポータルサイトボタンキャプション（本体側）
On_sakura.portalbuttoncaption { "ポータルサイト" }

//ポータルサイトリンク
//記述法はおすすめサイトリンクと同様
On_sakura.portalsites
{"/
	サイトタイトル1%(CHR(1))/
	http://......./%(CHR(2))/

	サイトタイトル2%(CHR(1))/
	http://......./%(CHR(2))/
"}

//消滅指示ボタン表示切り替え
//	"0"で非表示、それ以外で表示
On_vanishbutton.visible { '1' }
*/

//---------------------------------------------------------
//ネットワーク更新リソース
//---------------------------------------------------------

//ネットワーク更新の基準位置となるURL
//ネットワーク更新有りの場合必ずコメントアウトを外しURL記述
//On_homeurl { "http://......./" }

//ネットワーク更新時ファイル数を1から数える
//MATERIAと同じ0にしておくと無難
On_useorigin1 { '0' }

//---------------------------------------------------------
//他リソース
//---------------------------------------------------------

//sstpなどで%usernameが指定された時使用
On_username {username}

